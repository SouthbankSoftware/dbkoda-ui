// @Author: Wahaj Shamim <wahaj>
// @Date:   2017-05-12T15:11:29+10:00
// @Email:  wahaj@southbanksoftware.com
// @Last modified by:   guiguan
// @Last modified time: 2017-06-08T10:59:41+10:00
@import './_defaultTheme.scss';
body {
  background-color: $panelRightBackground;
}

h1 {
  color: $white;
  font-size: 40px;
  margin-top: 4px;
}

h2 {
  color: $white;
  margin-top: 4px;
}

h3 {
  color: $white;
  margin-top: 4px;
}


span.Resizer {
  opacity: 0;
}
.pt-popover-content {
  color: $toolTipFontColour !important;
  background-color: $toolTipBackgroundColour !important;
  font-family: Arial, Helvetica, sans-serif;
  font-size: 10pt;
}

.pt-popover-arrow {
  svg {
    path {
      fill: $toolTipBackgroundColour !important;
      color: $toolTipBackgroundColour !important;
    }
  }
}

.pt-toast:first-child {
  margin-top: 100px;
}

.pt-toast {
  color: unset !important;
}

div.pt-dialog {
  background-color: $panelLeftBackground !important;
  div.pt-alert-footer {
    button {
      font-weight: lighter !important;
      color: $dialogButtonBorder !important;
      width: 7em !important;
      border-radius: 0 !important;
      background-image: unset !important;
      background-color: $panelLeftBackground !important;
      border: 1px solid $dialogButtonBorder !important;
      box-shadow: unset !important;
    }
    button.pt-button:hover {
      background-color: $connectionButtonBackgroundColourHover !important;
      color: $connectionButtonFontColourHover !important;
    }
  }
  input[type=text],
  input[type=number],
  input[type=password] {
    background: unset;
    color: $connectionActiveTextFieldTextColour !important;
  }
  input[type=text]:focus,
  input[type=number]:focus,
  input[type=password]:focus {
    background-color: $connectionActiveTextFieldBackgroundColour !important;
    box-shadow: none !important;
  }
}

.pt-toast.pt-intent-success {
  background-color: $toastBackgroundColourSuccess !important;
  color: $toastFontColourSuccess !important;
  span {
    color: $toastFontColourSuccess !important;
  }
  div {
    color: unset !important;
    color: $toastCloseIconColourSuccess !important;
    button::before {
      color: $toastCloseIconColourSuccess !important;
    }
  }
}

.pt-toast.pt-intent-warning {
  background-color: $toastBackgroundColourWarning !important;
  color: $toastFontColourWarning !important;
  span {
    color: $toastFontColourWarning !important;
  }
  div {
    color: unset !important;
    color: $toastCloseIconColourWarning !important;
    button::before {
      color: $toastCloseIconColourWarning !important;
    }
  }
}

.pt-toast.pt-intent-danger {
  background-color: $toastBackgroundColourDanger !important;
  color: $toastFontColourDanger !important;
  span {
    color: $toastFontColourDanger !important;
  }
  div {
    color: unset !important;
    color: $toastCloseIconColourDanger !important;
    button::before {
      color: $toastCloseIconColourDanger !important;
    }
  }
}

.pt-toast.pt-intent-info {
  background-color: $toastBackgroundColourInfo !important;
  color: $toastFontColourInfo !important;
  span {
    color: $toastFontColourInfo !important;
  }
  div {
    color: unset !important;
    color: $toastCloseIconColourInfo !important;
    button::before {
      color: $toastCloseIconColourInfo !important;
    }
  }
}

.circleButton {
  background-color: $buttonTertiaryBackground !important;
  color: $buttonTertiaryIcon !important;
  border-radius: 50%;
  margin-left: 5px;
  margin-right: 5px;
}

.circleButton:hover {
  background-color: $buttonTertiaryBackgroundHover !important;
  border-radius: 50%;
  margin-left: 5px;
  margin-right: 5px;
}

.circleButton.pt-disabled {
  background-color: $buttonTertiaryBackgroundDisabled !important;
}

.circleButton.warningButton {
  background-color: $keywordThree !important;
  color: $white !important;
  border-radius: 50%;
  margin-left: 5px;
  margin-right: 5px;
}

.circleButton.warningButton:hover {
  background-color: $buttonTertiaryBackground !important;
  border-radius: 50%;
  margin-left: 5px;
  margin-right: 5px;
}

.middleRow {
  height: 100%;
  overflow: hidden;
}

.RootSplitPane>.Pane1 {
  background-color: $panelLeftBackground;
}

.RootSplitPane>.Pane2 {
  background-color: $panelRightBackground;
}

.fullHeight {
  height: 100%;
}

.dbcoda-toaster {
  z-index: 20000;
}

.pt-tabs {
  color: $white;
  background-color: $tabBackground;
}

.pt-tab-panel {
  flex: 1;
  display: flex;
  margin-top: 2px;
}

.pt-tab {
  color: $white;
}

.pt-tab-list {
  margin-left: 28px;
  overflow-x: scroll;
}

.pt-tab-list::-webkit-scrollbar {
  display: none;
}

.pt-tab-indicator {
  background-color: $white;
}

.pt-select {
  background-color: $keywordFour !important;
}

.cm-s-ambiance .CodeMirror-linenumber {
  color: $white;
}

.CodeMirror,
.ReactCodeMirror {
  height: 100%;
}

//  //// Global CSS: ////  //
/////////////////////////////
.pt-dark pre {
  box-shadow: none !important;
}

select.pt-intent-primary {
  background-color: $selectDarkPrimaryBackground !important;
  color: $buttonPrimaryBackground !important;
}

input.pt-input,
textarea {
  background-color: $searchPrimaryBackground !important;
  color: $searchPrimaryFontColor !important;
}

input.pt-input.secondaryInput,
textArea {
  background-color: $searchSecondaryBackground !important;
  color: $searchSecondaryFontColor !important;
}

.pt-icon-search {
  color: $buttonPrimaryIcon !important;
}

::-webkit-input-placeholder {
  color: $searchPrimaryFontColor !important;
}

.tooltip {
  position: relative;
  display: inline-block;
  border-bottom: 1px solid $keywordThree;
}

.tooltip .tooltiptext {
  visibility: hidden;
  width: 160px;
  background-color: black;
  color: #fff;
  text-align: center;
  border-radius: 6px;
  padding: 5px 0;
  font-size: 12px;
  /* Position the tooltip */
  position: absolute;
  z-index: 1;
  top: -5px;
  left: 105%;
}

.tooltip:hover .tooltiptext {
  visibility: visible;
}

a.pt-intent-primary {
  background-color: $buttonPrimaryBackground !important;
  color: $buttonPrimaryIcon !important;
}

a.pt-intent-primary:hover {
  background-color: $buttonPrimaryBackgroundHover !important;
  color: $buttonPrimaryIcon !important;
}

a.pt-disabled.pt-intent-primary {
  background-color: rgba(255, 255, 255, 0.3) !important;
}

.pt-tab:not([aria-disabled="true"]):hover,
.pt-tab[aria-selected="true"]:hover {
  color: $buttonSecondaryBackgroundHover !important;
}

.cm-string.cm-property {
  color: $propertyStringFontColor !important;
}

.pt-button.pt-disabled {
  opacity: 0.2;
}

.pt-button {
  box-shadow: unset !important;
}

.pt-control input:focus~.pt-control-indicator,
input[type=radio]:focus,
input[type=checkbox]:focus {
  outline: none;
  box-shadow: 0 0 0 1px $searchPrimaryBackground !important;
}

button:focus,
a[role=button]:focus {
  outline: none;
  box-shadow: 0 0 0 1px rgba(255, 255, 255, 0.3) !important;
}