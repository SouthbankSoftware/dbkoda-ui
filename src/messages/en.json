{
  "en": {
    "general": {
      "confirm": "Okay",
      "cancel": "Cancel",
      "send": "Send"
    },
    "aggregate_builder": {
      "palette_title": "Pipeline Palette",
      "details_title": "Stage Details",
      "no_block_selected": "No Stage Selected",
      "show_left_panel": "Show Panel",
      "hide_left_panel": "Hide Panel",
      "byo_code": "BYO Code",
      "form_code": "Code Form",
      "no_active_connection":
        "dbKoda has lost connection to your Mongo Shell.\n Please close or export this aggregation and then import it or start again.",
      "no_active_connection_for_import":
        "Cannot import without an active connection.",
      "import_button": "Import",
      "generate_chart_button": "Generate Chart",
      "import_failed": "Sorry, failed to import that file!",
      "import_passed": "Import succeeded.",
      "export_passed": "Export Complete.",
      "export_button": "Export",
      "no_valid_output":
        "  Cannot display results at this stage, Block probably does not produce valid results.\n  Pipeline stages detected as invalid will be gray.\n  ----------------------------------  ",
      "block_not_yet_valid":
        "  Please fill in Stage details and click on the stage to see results.\n  ----------------------------------  ",
      "valid_output":
        "  Example of Result at current Stage: \n  ----------------------------------  \n",
      "no_output":
        "  No results to display at current stage in pipeline.\n  Perhaps your pipeline returns no results, or is filtering out all results.\n  You can also increase your sample size in the 'Start' step to increase results of accuracy.\n  ----------------------------------  ",
      "loading_output":
        "  Loading results...\n  ----------------------------------  ",
      "failed_output":
        "  Failed to fetch results\n  ----------------------------------  ",
      "alerts": {
        "importWarningText":
          " Warning, your current aggregate builder will be lost on import, please export your builder before importing a new one. ",
        "cancel": "Cancel",
        "okay": "Okay"
      },
      "invalid_aggregation_code":
        "Invalid aggregation code. Please check syntax."
    },
    "telemetry_dialog": {
      "header": "Welcome!",
      "content_first":
        "We would like to gather information about how you are using the product so we can make it even more awesome.",
      "content_second":
        "Is it okay if we collect some information about how you interact with dbKoda and send it back to our servers?",
      "content_third": "You can read our full privacy policy ",
      "privacy_link": "here",
      "button_no": "No Thanks",
      "button_yes": "Sure"
    },
    "output": {
      "headings": {
        "default": "Query Output",
        "table": "Table Output"
      },
      "toolbar": {
        "save": "Save Output",
        "showMore": "Show More (Ctrl + M)",
        "clear": "Clear Output Contents (Ctrl + L)"
      },
      "editor": {
        "restoreSession": "** Session Restored **\r",
        "contextJson": "Enhanced JSON View",
        "contextTable": "JSON Table View",
        "contextTableSingle": "Single Document",
        "contextTableMulti": "Multi-Document",
        "contextChart": "Chart View",
        "parseJsonError": "Could not parse a document from the selected text.",
        "tabularError":
          "Unable to find a result set for that line, please right click on a JSON document",
        "hide": "Hide",
        "expand": "Show",
        "collapseAll": "Collapse All",
        "expandAll": "Expand All",
        "numOfDocs": "Number of Documents: ",
        "exceededMaxDocs":
          "Table View is currently limited to 500 documents at a time, please narrow your query."
      },
      "terminal": {
        "execute": "Execute Command (Enter)"
      }
    },
    "explain": {
      "heading": "Explain",
      "parseError": "Failed to parse output JSON",
      "executionError": "Failed to run explain",
      "panel": {
        "rawView": "Raw Json",
        "explainView": "Explain"
      },
      "step": {
        "fetchFilter":
          "Documents from previous step were scanned looking for these criteria: {0}.",
        "fetchIndex": "Retrieved documents from index fetch",
        "collScanAll":
          "All documents in the collection where scanned. No filter condition was specified",
        "collScanFilter":
          "Documents were scanned looking for these criteria: {0}",
        "ixscan": "Index {0} was used to find matching values for {1}",
        "sort":
          "Documents were sorted on : {0}. Consider creating index on ${0} to support the sort",
        "limit": "Limited documents returned : {0}",
        "skip": "Skipped Forward : {0}",
        "singleShard": "A single shard {0} was involved in the query.",
        "generateKeys": "Generate keys for the next sort step",
        "shardingFilter":
          "The previous operation was sent to one or more shards",
        "shardMergeSort": "Output from multiple shards was merged and sorted",
        "shardMerge": "Output from multiple shards was merged",
        "keepMutations":
          "Merge in any documents which may have been incorrectly invalidated mid-query",
        "subplan":
          "Selected one of multiple possible plans based on $or condition",
        "eof": "Nothing was found: maybe collection does not exist?",
        "andSorted": "Output from the previous steps was sort-merged",
        "sortMerge": "Output from multiple sorts was merged",
        "project": "A subset of columns were projected",
        "or": "Combine document from previous {0} stages"
      },
      "view": {
        "statisticHeader": "Statistic",
        "valueHeader": "Value",
        "docsReturned": "Total Docs Returned",
        "keysExamined": "Total Keys Examined",
        "docsExamined": "Total Docs Examined",
        "namespaceLabel": "Namespace:",
        "queryLabel": "Query:"
      },
      "worst-shard": "{0} is the most time consuming shard.",
      "details": {},
      "statistics": {
        "shard": "Shard",
        "examined": "Examined",
        "returned": "Returned",
        "ms": "ms"
      }
    },
    "details": {
      "error":
        "Sorry, we were unable to create the view you asked for due to the following error: {0}",
      "dddError": "No DefaultValues attribute available in DDD json file."
    },
    "editor": {
      "toolbar": {
        "executeSelectedTooltip": "Execute Selected Commands",
        "executeAllTooltip": "Execute All Commands",
        "stopExecutionTooltip": "Stop Execution",
        "explainTooltip": "Explain",
        "explainQuery": "Query Planner",
        "explainExecutionStats": "Execution Stats",
        "explainAllPlans": "All Plans Execution",
        "addEditorTooltip": "Add a new Editor",
        "openFileTooltip": "Open File",
        "saveFileTooltip": "Save to File",
        "saveFileAsTooltip": "Save to Another File",
        "addEditorError":
          "Cannot create new Editor for 'No Active Connection'.",
        "connectionSuccess": "Connection Success!",
        "profileSwapError": "Could not swap Profiles.",
        "profileSwapSslError":
          "Could not swap profiles due to SSL differences.",
        "notSupportedInUI": "`{0}` is not supported in browser UI",
        "cannotExecuteOnWelcome": "Cannot Execute on Welcome Page.",
        "executionScriptFailed":
          "Execution of scripts failed, do you have an active connection?",
        "possibleMultiLineCommand":
          "Could not detect a valid mongo command, please highlight multi-line commands."
      },
      "view": {
        "executionStopped": "Execution Stopped Successfully",
        "executionStoppedError": "Stop Execution Failed! {0}",
        "tooManyLintErrors": "Too many Linting Errors on this line...",
        "menu": {
          "executeSelected": "Execute Selected",
          "executeAll": "Execute All",
          "refresh": "Refresh",
          "formatAll": "Format All",
          "formatSelection": "Format Selection",
          "translateSelection": "Transalate to Native Code"
        }
      },
      "welcome": {
        "heading": "Welcome"
      },
      "tabMenu": {
        "closeTab": "Close Tab",
        "closeOtherTabs": "Close All Other Tabs",
        "closeAllTabs": "Close All Tabs",
        "closeLeft": "Close All Tabs To The Left",
        "closeRight": "Close All Tabs To The Right"
      },
      "savingDialog": {
        "title": "'{0}' has changes.",
        "message":
          "Do you want to save these changes? All changes will be lost if you close this tab without saving.",
        "dontSave": "Don't Save",
        "cancel": "Cancel",
        "save": "Save"
      }
    },
    "connection": {
      "editHeading": "Edit Connection",
      "createHeading": "Create New Connection",
      "existingAlias": "The alias already exists",
      "success": "Connection Success!",
      "test": "Test {0}",
      "createProfileError": "Attempt to create a new profile failed.",
      "validationError": "Validation failed.",
      "form": {
        "connectButton": "Connect",
        "resetButton": "Reset",
        "testButton": "Test",
        "saveButton": "Save",
        "closeButton": "Close",
        "requiredMessage": ":attribute field is required.",
        "alias": "Alias",
        "defaultAlias": "Connection - {0}",
        "host": "Host",
        "port": ":",
        "defaultPort": "27017",
        "url": "URL",
        "defaultUrl":
          "mongodb://ec2-13-54-17-227.ap-southeast-2.compute.amazonaws.com",
        "database": "Database",
        "defaultDatabase": "admin",
        "ssl": "SSL",
        "sha": "SCRAM-SHA-1(username/password)",
        "username": "Username",
        "defaultUsername": "dbenvy",
        "password": "Password"
      }
    },
    "profile": {
      "noProfile": "No Profile Selected",
      "notClosed": "Connection is not closed.",
      "removeSuccess": "Successfully Removed Connection",
      "connectionProfiles": "Connection Profiles",
      "menu": {
        "openConnection": "Open Connection",
        "closeConnection": "Close Connection",
        "editProfile": "Edit Profile",
        "editors": "Editors:",
        "newWindow": "New Window",
        "deleteProfile": "Delete Profile"
      },
      "closeAlert": {
        "prompt": "Are you sure you want to close this connection?",
        "confirmButton": "Close Connection",
        "cancelButton": "Cancel"
      },
      "removeAlert": {
        "prompt": "Are you sure you want to remove this connection?",
        "confirmButton": "Remove",
        "cancelButton": "Cancel"
      },
      "openAlert": {
        "passwordPrompt": "Please enter your password for this profile.",
        "passwordPlaceholder": "Enter Password...",
        "remotePassPrompt": "Please enter your password for the ssh tunnel.",
        "remotePassPlaceholder": "Enter SSH Password...",
        "passPhrasePrompt":
          "Please enter your passphrase for the ssh tunnel private key.",
        "passPhrasePlaceholder": "Enter SSH Key Passphrase...",
        "confirmButton": "Open",
        "cancelButton": "Cancel"
      },
      "toolbar": {
        "connectionClosed": "Connection Closed",
        "newProfileTooltip": "Create a new Profile",
        "editProfileTooltip": "Edit a Profile",
        "closeProfileTooltip": "Close a Profile",
        "removeProfileTooltip": "Remove a Profile",
        "searchTooltip": "Enter a string to search for Profiles",
        "searchPlaceholder": "Filter Profiles..."
      }
    },
    "tree": {
      "executeButton": "Execute",
      "closeButton": "Close",
      "submitButton": "Submit",
      "genericValidateError": "This is a generic error message!",
      "fieldRequired": ":attribute field is required."
    },
    "error": {
      "connection": {
        "slave": "Connected to slave without slaveOk"
      }
    },
    "translator": {
      "tooltip": {
        "callback": "Use callback",
        "promise": "Use promise",
        "await": "Use await",
        "close": "Close Translator"
      },
      "label": {
        "syntax": "Syntax Selection",
        "callback": "C",
        "promise": "P",
        "await": "A",
        "driver-code": "Node.js Driver Code"
      },
      "error": {
        "tranlate_failed": "Failed to translate the script"
      },
      "execute": "Execute Commands"
    },
    "backuprestore": {
      "mongoExport": "Mongo Export",
      "mongoDump": "Mongo Dump",
      "mongoImport": "Mongo Import",
      "mongoRestore": "Mongo Restore",
      "database": "Database",
      "collection": "Collection",
      "selectDatabase": "Select Database",
      "selectCollection": "Select Collection",
      "openFilePath": "Open File Path",
      "filePath": "File Path",
      "chooseDirectory": "Choose",
      "requiredWarning": "This field is required",
      "executionOSScriptFailed": "Executing command failed",
      "parameters": {
        "ssl": {
          "label": "SSL",
          "tooltip": "Connect to mongod or mongos using SSL"
        },
        "allCollections": {
          "label": "All Collections",
          "tooltip": "allCollections"
        },
        "db": {
          "label": "Database",
          "tooltip": "database"
        },
        "collection": {
          "label": "collection",
          "tooltip": "collection"
        },
        "importFilePath": {
          "label": "File to restore",
          "tooltip": "File to restore"
        },
        "pretty": {
          "label": "pretty",
          "tooltip": "Format output using .pretty()"
        },
        "jsonArray": {
          "label": "jsonArray",
          "tooltip": "output to a JSON array"
        },
        "repair": {
          "label": "Repair",
          "tooltip": "Repair (not supported by all storage engines)"
        },
        "outputOptions": {
          "label": "outputOptions",
          "tooltip": "outputOptions"
        },
        "inputOptions": {
          "label": "inputOptions",
          "tooltip": "inputOptions"
        },
        "queryOptions": {
          "label": "queryOptions",
          "tooltip": "queryOptions"
        },
        "ingestOptions": {
          "label": "Ingest Options",
          "tooltip": "ingestOptions"
        },
        "restoreOptions": {
          "label": "Restore Options",
          "tooltip": "Restore Options"
        },
        "limit": {
          "label": "Limit <count>",
          "tooltip": "Limit on total documents returned <count>"
        },
        "skip": {
          "label": "Skip <count>",
          "tooltip": "Skip forward before exporting documents<count>"
        },
        "sort": {
          "label": "Sort <json>",
          "tooltip": "Sort condition for documents <json>"
        },
        "fields": {
          "label": "Fields <field>[,<field>]*",
          "tooltip":
            "Comma separated list of field names (required for exporting CSV) e.g. -f \"name,age\""
        },
        "allDatabases": {
          "label": "All Database",
          "tooltip": "All Database"
        },
        "forceTableScan": {
          "label": "forceTableScan",
          "tooltip": "Perform a collection scan, not an _id index scan"
        },
        "assertExists": {
          "label": "assertExists",
          "tooltip":
            "If specified, export fails if the collection does not exist (default: false)"
        },
        "query": {
          "label": "Query",
          "tooltip":
            "Query filter, as a JSON string, e.g., '\\{x:\\{$gt:1\\}\\}'"
        },
        "readPreference": {
          "label": "readPreference",
          "tooltip":
            "Specify either a preference name or a preference json object"
        },
        "dumpDbUsersAndRoles": {
          "label": "dumpDbUsersAndRoles",
          "tooltip": "Include user and role definitions for a database dump"
        },
        "viewsAsCollections": {
          "label": "viewsAsCollections",
          "tooltip": "Export views as collections (eg, materialize the view)"
        },
        "numParallelCollections": {
          "label": "numParallelCollections",
          "tooltip": "Number of parallel threads for operation"
        },
        "drop": {
          "label": "drop",
          "tooltip": "Drop collections before restoring"
        },
        "dryRun": {
          "label": "dryRun",
          "tooltip": "Don't actually import data - produce report only"
        },
        "writeConcern": {
          "label": "writeConcern",
          "tooltip": "Write concern document for restore operations"
        },
        "noIndexRestore": {
          "label": "noIndexRestore",
          "tooltip": "Do not restore indexes"
        },
        "noOptionsRestore": {
          "label": "noOptionsRestore",
          "tooltip": "Do not restore Collection options"
        },
        "keepIndexVersion": {
          "label": "keepIndexVersion",
          "tooltip": "Do not upgrade index on restore"
        },
        "maintainInsertionOrder": {
          "label": "maintainInsertionOrder",
          "tooltip":
            "Make sure documents are restored in the order they appear in backup"
        },
        "numInsertionWorkers": {
          "label": "numInsertionWorkers",
          "tooltip":
            "Number of insert operations to run concurrently per collection (1 by default) (default: 1)"
        },
        "stopOnError": {
          "label": "stopOnError",
          "tooltip": "Halt the restore upon any error"
        },
        "bypassDocumentValidation": {
          "label": "bypassDocumentValidation",
          "tooltip":
            "Do not process Document validation rules during the restore"
        },
        "objcheck": {
          "label": "objcheck",
          "tooltip": "Validate all documents to avoid invalid documents"
        },
        "oplogReplay": {
          "label": "oplogReplay",
          "tooltip": "Replay oplogs entires from oplog.bson"
        },
        "oplogLimit": {
          "label": "oplogLimit",
          "tooltip": "Only apply oplog entries with a lesser timestamp"
        },
        "restoreDbUsersAndRoles": {
          "label": "restoreDbUsersAndRoles",
          "tooltip": "Restore database user and role definitions"
        },
        "gzip": {
          "label": "gzip",
          "tooltip": "Compress or decompress dumps using GZIP"
        },
        "headerLine": {
          "label": "headerLine",
          "tooltip": "Import CSV or TSV have headers in first line"
        },
        "parseGrace": {
          "label": "parseGrace",
          "tooltip": "parseGrace"
        },
        "type": {
          "label": "Type",
          "tooltip": "File format"
        },
        "columnsHaveTypes": {
          "label": "columnsHaveTypes",
          "tooltip": "Field list includes data types (name.type)"
        },
        "ignoreBlanks": {
          "label": "ignoreBlanks",
          "tooltip": "Ignore balnk fields in input stream (don't create docs)"
        },
        "mode": {
          "label": "mode",
          "tooltip": "Insert, upsert or merge documents"
        },
        "upsertFields": {
          "label": "upsertFields",
          "tooltip":
            "List of fields that specify query (matching) portion of upsert operation"
        },
        "noHeaderLine": {
          "label": "noHeaderLine",
          "tooltip": "Don't create header lines in exported data"
        }
      }
    },
    "status_bar": {
      "feedback": {
        "button_title": "Feedback",
        "alert_text": "Please let us know what you think of dbKoda.",
        "additional_comments_label": "Additional Comments:"
      },
      "support_bundle": {
        "button_title": "Lodge Bug",
        "alert_text":
          "Pressing okay will cause the application to bundle up some logs about your experience into a compressed file, this file can then be uploaded to the dbKoda team to help solve your bug. This may take a small amount of time.",
        "finished_text_default":
          "Support bundle has been created and is avaliable in your dbKoda directory. Please select one of the options below to send us your support bundle. Directory for support bundle is documented ",
        "directory_faq_link": "here.",
        "forum": {
          "button": "Forum",
          "default_subject":
            "dbKoda%20Bug%20-%20%7BYour%20Bug%20Title%20Here%7D"
        },
        "email": {
          "button": "Email",
          "default_subject":
            "dbKoda%20Bug%20-%20%7BYour%20Bug%20Title%20Here%7D",
          "default_body":
            "Please%20Describe%20your%20Bug%20or%20Issue%20Below%3A%0A%0A%0APlease%20Attach%20your%20Support%20Bundle%20to%20this%20document along with any%20other%20relevant%20files%20or%20photos.%2C%20Support%20Bundle%20location%20is%20documented%20here%3A%20https%3A%2F%2Fdbkoda.useresponse.com%2Fknowledge-base%2Farticle%2Fhow-do-i-generate-a-support-bundle%0A%0A%0AKind%20Regards%2C%0A%7BYour%20Name%7D"
        }
      }
    }
  }
}
